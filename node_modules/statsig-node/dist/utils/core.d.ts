/// <reference types="node" />
import { StatsigUser } from '../StatsigUser';
declare function getSDKVersion(): string;
declare function getSDKType(): string;
declare function notEmpty<TValue>(value: TValue | null | undefined): value is TValue;
declare function notEmptyObject(value: unknown | null | undefined): boolean;
declare function clone<T>(obj: T | null): T | null;
declare function cloneEnforce<T>(obj: T): T;
declare function getNumericValue(num: unknown): number | null;
declare function getBoolValue(val: unknown): boolean | null;
export type StatsigMetadata = {
    sdkType: string;
    sdkVersion: string;
    languageVersion: string;
    sessionID?: string;
};
declare function getStatsigMetadata(extra?: Record<string, unknown>): StatsigMetadata;
declare function isUserIdentifiable(user: StatsigUser | null): boolean;
declare function poll(fn: () => void, interval: number): NodeJS.Timer;
declare function getTypeOf(value: unknown): "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function" | "array";
export { clone, cloneEnforce, getBoolValue, getNumericValue, getSDKVersion, getSDKType, getStatsigMetadata, isUserIdentifiable, notEmpty, notEmptyObject, poll, getTypeOf, };
export declare class ExhaustSwitchError extends Error {
    constructor(x: never);
}
