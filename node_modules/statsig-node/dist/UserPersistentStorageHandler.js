"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var OutputLogger_1 = __importDefault(require("./OutputLogger"));
var EvaluatorUtils_1 = require("./utils/EvaluatorUtils");
var UserPersistentStorageHandler = /** @class */ (function () {
    function UserPersistentStorageHandler(storage) {
        this.storage = storage;
    }
    UserPersistentStorageHandler.prototype.load = function (user, idType) {
        if (this.storage == null) {
            return null;
        }
        var key = UserPersistentStorageHandler.getStorageKey(user, idType);
        if (!key) {
            return null;
        }
        try {
            return this.storage.load(key);
        }
        catch (e) {
            OutputLogger_1["default"].error("statsigSDK> Failed to load persisted values for key ".concat(key, " (").concat(e.message, ")"));
            return null;
        }
    };
    UserPersistentStorageHandler.prototype.save = function (user, idType, configName, evaluation) {
        if (this.storage == null) {
            return;
        }
        var key = UserPersistentStorageHandler.getStorageKey(user, idType);
        if (!key) {
            return;
        }
        try {
            this.storage.save(key, configName, evaluation.toStickyValues());
        }
        catch (e) {
            OutputLogger_1["default"].error("statsigSDK> Failed to save persisted values for key ".concat(key, " (").concat(e.message, ")"));
        }
    };
    UserPersistentStorageHandler.prototype["delete"] = function (user, idType, configName) {
        if (this.storage == null) {
            return;
        }
        var key = UserPersistentStorageHandler.getStorageKey(user, idType);
        if (!key) {
            return;
        }
        try {
            this.storage["delete"](key, configName);
        }
        catch (e) {
            OutputLogger_1["default"].error("statsigSDK> Failed to delete persisted values for key ".concat(key, " (").concat(e.message, ")"));
        }
    };
    UserPersistentStorageHandler.getStorageKey = function (user, idType) {
        var unitID = (0, EvaluatorUtils_1.getUnitID)(user, idType);
        if (!unitID) {
            OutputLogger_1["default"].warn("statsigSDK> No unit ID found for ID type ".concat(idType));
        }
        return "".concat(unitID !== null && unitID !== void 0 ? unitID : '', ":").concat(idType);
    };
    return UserPersistentStorageHandler;
}());
exports["default"] = UserPersistentStorageHandler;
