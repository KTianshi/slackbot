import { EvaluationDetails } from './EvaluationDetails';
import type { StickyValues } from './interfaces/IUserPersistentStorage';
import { SecondaryExposure } from './LogEvent';
export default class ConfigEvaluation {
    value: boolean;
    rule_id: string;
    secondary_exposures: SecondaryExposure[];
    json_value: Record<string, unknown>;
    explicit_parameters: string[] | null;
    config_delegate: string | null;
    unsupported: boolean;
    undelegated_secondary_exposures: SecondaryExposure[];
    is_experiment_group: boolean;
    group_name: string | null;
    evaluation_details: EvaluationDetails | undefined;
    id_type: string | null;
    configVersion?: number | undefined;
    constructor(value: boolean, rule_id?: string, group_name?: string | null, id_type?: string | null, secondary_exposures?: SecondaryExposure[], json_value?: Record<string, unknown> | boolean, explicit_parameters?: string[] | null, config_delegate?: string | null, configVersion?: number, unsupported?: boolean);
    withEvaluationDetails(evaulationDetails: EvaluationDetails): ConfigEvaluation;
    setIsExperimentGroup(isExperimentGroup?: boolean): void;
    static unsupported(configSyncTime: number, initialUpdateTime: number, version?: number | undefined): ConfigEvaluation;
    toStickyValues(): StickyValues;
    static fromStickyValues(stickyValues: StickyValues, initialUpdateTime: number): ConfigEvaluation;
}
