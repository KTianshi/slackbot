export declare class ConfigSpec {
    name: string;
    type: string;
    salt: string;
    defaultValue: unknown;
    enabled: boolean;
    idType: string;
    rules: ConfigRule[];
    entity: string;
    explicitParameters: string[] | null;
    hasSharedParams: boolean;
    isActive?: boolean;
    targetAppIDs?: string[];
    version?: number;
    constructor(specJSON: Record<string, unknown>);
    parseRules(rulesJSON: unknown): ConfigRule[];
}
export declare class ConfigRule {
    name: string;
    passPercentage: number;
    conditions: ConfigCondition[];
    returnValue: unknown;
    id: string;
    salt: string;
    idType: string;
    configDelegate: string | null;
    isExperimentGroup?: boolean;
    groupName: string | null;
    constructor(ruleJSON: Record<string, unknown>);
    parseConditions(conditionsJSON: unknown): ConfigCondition[];
    isTargetingRule(): boolean;
}
export declare class ConfigCondition {
    type: string;
    targetValue: unknown;
    operator: string;
    field: string;
    additionalValues: Record<string, unknown>;
    idType: string;
    targetValueSet?: Set<string>;
    constructor(conditionJSON: Record<string, unknown>);
}
