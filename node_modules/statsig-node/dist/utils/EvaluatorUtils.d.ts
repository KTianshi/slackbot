import { StatsigUser } from '../StatsigUser';
export declare function getUnitID(user: StatsigUser, idType: string): string | undefined;
export declare function computeUserHash(userHash: string): bigint;
export declare function getFromUser(user: StatsigUser, field: string): any | null;
export declare function getFromUserAgent(user: StatsigUser, field: string): string | null;
export declare function getFromEnvironment(user: StatsigUser, field: string): string | undefined;
export declare function getParameterCaseInsensitive<T>(object: Record<string, T> | undefined | null, key: string): T | undefined;
export declare function numberCompare(fn: (a: number, b: number) => boolean): (a: unknown, b: unknown) => boolean;
export declare function versionCompareHelper(fn: (res: number) => boolean): (a: string, b: string) => boolean;
export declare function versionCompare(first: string, second: string): number | null;
export declare function removeVersionExtension(version: string): string;
export declare function stringCompare(ignoreCase: boolean, fn: (a: string, b: string) => boolean): (a: string, b: string) => boolean;
export declare function dateCompare(fn: (a: Date, b: Date) => boolean): (a: string, b: string) => boolean;
export declare function arrayAny(value: any, array: unknown, fn: (value: any, otherValue: any) => boolean): boolean;
export declare function arrayHasValue(value: unknown[], target: string[] | number[]): boolean;
export declare function arrayHasAllValues(value: unknown[], target: string[] | number[]): boolean;
